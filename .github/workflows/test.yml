# Pipeline for testing 2 areas:
#   1. Verifying the code quality of the repo using ESLint & Prettier
#   2. Test the GitHub Action (index.js) using Jest unit tests & mocks
name: Test

on:
  push:
    # branches:
    #   - main
    paths-ignore:
      - ".forceignore"
      - ".gitignore"
      - ".prettierignore"
      - ".prettierrc"
      - "LICENSE"
      - "package.json"
      - "README.md"
  pull_request:
    types: [opened, synchronize, reopened]
    paths-ignore:
      - ".forceignore"
      - ".gitignore"
      - ".prettierignore"
      - ".prettierrc"
      - "LICENSE"
      - "package.json"
      - "README.md"

jobs:
  # code-quality-tests:
  #   name: "Run Code Quality Tests"
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: "Checkout source code"
  #       uses: actions/checkout@v3

  #     - name: "Restore node_modules cache"
  #       id: cache-npm
  #       uses: actions/cache@v3
  #       with:
  #         path: node_modules
  #         key: npm-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           npm-${{ env.cache-name }}-
  #           npm-

  #     - name: "Install npm dependencies"
  #       if: steps.cache-npm.outputs.cache-hit != 'true'
  #       run: npm ci

  #     - name: "ESLint Verification"
  #       run: npm run lint:verify

  #     - name: "Prettier Verification"
  #       run: npm run prettier:verify

  jest-tests:
    name: "Run Jest Tests"
    # needs: [code-quality-tests]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v3

      - name: "Restore node_modules cache"
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: node_modules
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ env.cache-name }}-
            npm-

      - name: "Install npm dependencies"
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: npm ci

      - name: "Run JEST Tests"
        run: npm run test:coverage

      # TODO integrate with Codecov.io?
      # - name: "Upload LWC code coverage to Codecov.io"
      #   uses: codecov/codecov-action@v3
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
